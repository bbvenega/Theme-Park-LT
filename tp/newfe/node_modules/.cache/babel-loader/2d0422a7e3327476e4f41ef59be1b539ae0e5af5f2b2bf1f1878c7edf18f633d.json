{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Documents\\\\GitHub\\\\Theme-Park-LT\\\\tp\\\\newfe\\\\src\\\\components\\\\Modals\\\\ConfirmationModal.js\",\n  _s = $RefreshSig$();\n// The ConfirmationModal is a modal that pops up when the user tries to submit a time. It asks the user to confirm the time they are submitting.\n\nimport React, { useEffect, useState } from \"react\";\nimport '../../Styles/Modal.css';\nimport { formatTime } from \"../../services/Time Stuff/formatTime\";\n\n// The modal function takes in the show, onClose, onConfirm and elapsedTime props.\n// The show prop is used to determine if the modal should be displayed or not.\n// The onClose prop is used to close the modal.\n// The onConfirm prop is used to confirm the submission of the time.\n// The elapsedTime prop is used to set the elapsed time.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmationModal = ({\n  show,\n  onClose,\n  onConfirm,\n  elapsedTime\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n\n  // The useEffect hook is used to set the visibility of the modal.\n  useEffect(() => {\n    if (show) {\n      setIsVisible(true);\n    } else {\n      const timer = setTimeout(() => setIsVisible(false), 200);\n      return () => clearTimeout(timer);\n    }\n  }, [show]);\n\n  // console.log(\"isVisible: \", isVisible);\n\n  // The return statement below will render the ConfirmationModal component.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal-backdrop ${show ? \"fade-in\" : \"fade-out\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-content ${show ? \"fade-in\" : \"fade-out\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Confirm Submission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"Are you sure you want to submit the time: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 53\n        }, this), formatTime(elapsedTime), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: onConfirm,\n          children: \" Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: onClose,\n          children: \" No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfirmationModal, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n_c = ConfirmationModal;\nexport default ConfirmationModal;\nvar _c;\n$RefreshReg$(_c, \"ConfirmationModal\");","map":{"version":3,"names":["React","useEffect","useState","formatTime","jsxDEV","_jsxDEV","ConfirmationModal","show","onClose","onConfirm","elapsedTime","_s","isVisible","setIsVisible","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Brian/Documents/GitHub/Theme-Park-LT/tp/newfe/src/components/Modals/ConfirmationModal.js"],"sourcesContent":["// The ConfirmationModal is a modal that pops up when the user tries to submit a time. It asks the user to confirm the time they are submitting.\r\n\r\nimport React, {useEffect, useState} from \"react\";\r\nimport '../../Styles/Modal.css';\r\nimport { formatTime } from \"../../services/Time Stuff/formatTime\";\r\n\r\n// The modal function takes in the show, onClose, onConfirm and elapsedTime props.\r\n// The show prop is used to determine if the modal should be displayed or not.\r\n// The onClose prop is used to close the modal.\r\n// The onConfirm prop is used to confirm the submission of the time.\r\n// The elapsedTime prop is used to set the elapsed time.\r\n\r\nconst ConfirmationModal = ({ show, onClose, onConfirm, elapsedTime }) => {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    // The useEffect hook is used to set the visibility of the modal.\r\n    useEffect(() => {\r\n        if (show) {\r\n            setIsVisible(true);\r\n        } else {\r\n            const timer = setTimeout(() => setIsVisible(false), 200);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [show]);\r\n\r\n\r\n  // console.log(\"isVisible: \", isVisible);\r\n\r\n  // The return statement below will render the ConfirmationModal component.\r\n  return (\r\n    <div className={`modal-backdrop ${show ? \"fade-in\" : \"fade-out\"}`}>\r\n      <div className={`modal-content ${show ? \"fade-in\" : \"fade-out\"}`}>\r\n        <h3> Confirm Submission</h3>\r\n        <p>\r\n          {\" \"}\r\n          Are you sure you want to submit the time: <br></br>\r\n          {formatTime(elapsedTime)}?\r\n        </p>\r\n        <div className=\"buttons-container\"> \r\n        <button className=\"button\" onClick={onConfirm}> Yes</button>\r\n        <button className=\"button\" onClick={onClose}> No</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,wBAAwB;AAC/B,SAASC,UAAU,QAAQ,sCAAsC;;AAEjE;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACAD,SAAS,CAAC,MAAM;IACZ,IAAIM,IAAI,EAAE;MACNM,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACH,MAAMC,KAAK,GAAGC,UAAU,CAAC,MAAMF,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;MACxD,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;IACpC;EACJ,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;;EAGZ;;EAEA;EACA,oBACEF,OAAA;IAAKY,SAAS,EAAE,kBAAkBV,IAAI,GAAG,SAAS,GAAG,UAAU,EAAG;IAAAW,QAAA,eAChEb,OAAA;MAAKY,SAAS,EAAE,iBAAiBV,IAAI,GAAG,SAAS,GAAG,UAAU,EAAG;MAAAW,QAAA,gBAC/Db,OAAA;QAAAa,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BjB,OAAA;QAAAa,QAAA,GACG,GAAG,EAAC,4CACqC,eAAAb,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAClDnB,UAAU,CAACO,WAAW,CAAC,EAAC,GAC3B;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJjB,OAAA;QAAKY,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAClCb,OAAA;UAAQY,SAAS,EAAC,QAAQ;UAACM,OAAO,EAAEd,SAAU;UAAAS,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5DjB,OAAA;UAAQY,SAAS,EAAC,QAAQ;UAACM,OAAO,EAAEf,OAAQ;UAAAU,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CAjCIL,iBAAiB;AAAAkB,EAAA,GAAjBlB,iBAAiB;AAmCvB,eAAeA,iBAAiB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}