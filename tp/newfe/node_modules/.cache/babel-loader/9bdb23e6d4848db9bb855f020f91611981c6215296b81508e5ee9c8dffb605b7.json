{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Documents\\\\GitHub\\\\Theme-Park-LT\\\\tp\\\\newfe\\\\src\\\\components\\\\Lists\\\\ParksList.js\",\n  _s = $RefreshSig$();\n// Parks List component that displays a list of parks and allows the user to select a park and add a visit to that park.\n// This component is used in the AddVisitModal component and is similar to AttractionsList component.\nimport React, { useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParksList = ({\n  parks,\n  onAdd\n}) => {\n  _s();\n  const [date, setDate] = useState(\"\");\n  const [selectedPark, setSelectedPark] = useState(null);\n  const [selectedParkName, setSelectedParkName] = useState(\"\");\n  const {\n    user\n  } = useAuth0();\n\n  // The handleAddVisit function is used to add a visit to the selected park.\n  const handleAddVisit = async e => {\n    e.preventDefault();\n    const userId = user.sub.split(\"|\")[1];\n    // console.log(\"User ID: \", userId);\n\n    const newVisit = {\n      park: {\n        id: selectedPark\n      },\n      parkName: selectedParkName,\n      dateVisited: date,\n      user: {\n        id: userId,\n        name: user.name,\n        email: user.email\n      },\n      userAttractions: []\n    };\n    onAdd(newVisit);\n  };\n\n  // The handleParkSelect function is used to select a park from the list of parks.\n  // This is preparation for adding a visit to the selected park.\n  const handleParkSelect = park => {\n    setSelectedPark(park.id);\n    setSelectedParkName(park.name);\n  };\n\n  // The return statement below will render the ParksList component.\n  // The component will display a list of selectable parks ( in alpabetical order ) that a user can add to their visit.\n  const sortedParks = [...parks].map(park => ({\n    ...park,\n    parks: park.parks.sort((a, b) => a.name.localeCompare(b.name))\n  })).sort((a, b) => a.name.localeCompare(b.name));\n\n  // The return statement below will render the ParksList component.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add a New Visit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddVisit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Park:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"park-list\",\n          children: sortedParks.map(park => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `park-item ${selectedPark === park.id ? \"selected\" : \"\"}`,\n            onClick: () => handleParkSelect(park),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"park-item-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: park.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"park-item-subtext\",\n                children: park.parks.map(individualPark => individualPark.name).join(\", \")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, park.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          disabled: !selectedPark,\n          children: \"Add Visit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ParksList, \"I/xEA6eESSTplzcaYXq6IVgIrgM=\", false, function () {\n  return [useAuth0];\n});\n_c = ParksList;\nexport default ParksList;\nvar _c;\n$RefreshReg$(_c, \"ParksList\");","map":{"version":3,"names":["React","useState","useAuth0","jsxDEV","_jsxDEV","ParksList","parks","onAdd","_s","date","setDate","selectedPark","setSelectedPark","selectedParkName","setSelectedParkName","user","handleAddVisit","e","preventDefault","userId","sub","split","newVisit","park","id","parkName","dateVisited","name","email","userAttractions","handleParkSelect","sortedParks","map","sort","a","b","localeCompare","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","className","onClick","individualPark","join","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Brian/Documents/GitHub/Theme-Park-LT/tp/newfe/src/components/Lists/ParksList.js"],"sourcesContent":["// Parks List component that displays a list of parks and allows the user to select a park and add a visit to that park.\r\n// This component is used in the AddVisitModal component and is similar to AttractionsList component.\r\nimport React, { useState } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst ParksList = ({ parks, onAdd }) => {\r\n  const [date, setDate] = useState(\"\");\r\n  const [selectedPark, setSelectedPark] = useState(null);\r\n  const [selectedParkName, setSelectedParkName] = useState(\"\");\r\n  const { user } = useAuth0();\r\n\r\n  // The handleAddVisit function is used to add a visit to the selected park.\r\n  const handleAddVisit = async (e) => {\r\n    e.preventDefault();\r\n    const userId = user.sub.split(\"|\")[1];\r\n    // console.log(\"User ID: \", userId);\r\n\r\n    const newVisit = {\r\n      park: {\r\n        id: selectedPark,\r\n      },\r\n      parkName: selectedParkName,\r\n      dateVisited: date,\r\n      user: {\r\n        id: userId,\r\n        name: user.name,\r\n        email: user.email,\r\n      },\r\n      userAttractions: [],\r\n    };\r\n\r\n    onAdd(newVisit);\r\n  };\r\n\r\n  // The handleParkSelect function is used to select a park from the list of parks.\r\n  // This is preparation for adding a visit to the selected park.\r\n  const handleParkSelect = (park) => {\r\n    setSelectedPark(park.id);\r\n    setSelectedParkName(park.name);\r\n  };\r\n\r\n  // The return statement below will render the ParksList component.\r\n  // The component will display a list of selectable parks ( in alpabetical order ) that a user can add to their visit.\r\n  const sortedParks = [...parks]\r\n    .map((park) => ({\r\n      ...park,\r\n      parks: park.parks.sort((a, b) => a.name.localeCompare(b.name)),\r\n    }))\r\n    .sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  // The return statement below will render the ParksList component.\r\n  return (\r\n    <div>\r\n      <h1>Add a New Visit</h1>\r\n      <form onSubmit={handleAddVisit}>\r\n        <div>\r\n          <label>\r\n            Date:\r\n            <input\r\n              type=\"date\"\r\n              id=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          \r\n            Park:\r\n            <ul className=\"park-list\">\r\n              {sortedParks.map((park) => (\r\n                <li\r\n                  key={park.id}\r\n                  className={`park-item ${\r\n                    selectedPark === park.id ? \"selected\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleParkSelect(park)}\r\n                >\r\n                  <div className=\"park-item-content\">\r\n                    <strong>{park.name}</strong>\r\n                    <br />\r\n                    <div className=\"park-item-subtext\">\r\n                      {park.parks\r\n                        .map((individualPark) => individualPark.name)\r\n                        .join(\", \")}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          \r\n        </div>\r\n        <div className=\"buttons-container\">\r\n        <button className=\"button\" type=\"submit\" disabled={!selectedPark}>\r\n          Add Visit\r\n        </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParksList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}