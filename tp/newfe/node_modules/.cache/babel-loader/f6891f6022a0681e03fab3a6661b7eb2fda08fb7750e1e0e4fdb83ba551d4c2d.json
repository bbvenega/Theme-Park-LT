{"ast":null,"code":"// The modal component is used as a general modal but in this case, it is used to display the modal for the attractionsList component.\nimport React,{useEffect,useState}from\"react\";import\"../../Styles/Modal.css\";// The modal function takes in the show, onClose, and children props.\n// The show prop is used to determine if the modal should be displayed or not.\n// The onClose prop is used to close the modal.\n// The children prop is used to render the children of the modal.\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Modal=_ref=>{let{show,onClose,children}=_ref;const[isVisible,setIsVisible]=useState(false);// The useEffect hook is used to set the visibility of the modal.\nuseEffect(()=>{if(show){setIsVisible(true);}else{const timer=setTimeout(()=>setIsVisible(false),200);return()=>clearTimeout(timer);}},[show]);// useEffect hook is dependent on the show variable.\n// console.log(\"isVisible: \", isVisible);\n// The return statement below will render the Modal component.\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"modal-backdrop \".concat(show?\"fade-in\":\"fade-out\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content \".concat(show?\"fade-in\":\"fade-out\"),children:[/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"modal-close-button\",children:\"\\xD7\"}),children]})});};export default Modal;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Modal","_ref","show","onClose","children","isVisible","setIsVisible","timer","setTimeout","clearTimeout","className","concat","onClick"],"sources":["C:/Users/Brian/Documents/GitHub/Theme-Park-LT/tp/newfe/src/components/Modals/Modal.js"],"sourcesContent":["// The modal component is used as a general modal but in this case, it is used to display the modal for the attractionsList component.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../../Styles/Modal.css\";\r\n\r\n// The modal function takes in the show, onClose, and children props.\r\n// The show prop is used to determine if the modal should be displayed or not.\r\n// The onClose prop is used to close the modal.\r\n// The children prop is used to render the children of the modal.\r\nconst Modal = ({ show, onClose, children }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  // The useEffect hook is used to set the visibility of the modal.\r\n  useEffect(() => {\r\n    if (show) {\r\n      setIsVisible(true);\r\n    } else {\r\n      const timer = setTimeout(() => setIsVisible(false), 200);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [show]); // useEffect hook is dependent on the show variable.\r\n\r\n  // console.log(\"isVisible: \", isVisible);\r\n\r\n    // The return statement below will render the Modal component.\r\n  return (\r\n    <div className={`modal-backdrop ${show ? \"fade-in\" : \"fade-out\"}`}>\r\n      <div className={`modal-content ${show ? \"fade-in\" : \"fade-out\"}`}>\r\n        <button onClick={onClose} className=\"modal-close-button\">\r\n          &times;\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,wBAAwB,CAE/B;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAiC,IAAhC,CAAEC,IAAI,CAAEC,OAAO,CAAEC,QAAS,CAAC,CAAAH,IAAA,CACxC,KAAM,CAACI,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAEjD;AACAD,SAAS,CAAC,IAAM,CACd,GAAIQ,IAAI,CAAE,CACRI,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,IAAM,CACL,KAAM,CAAAC,KAAK,CAAGC,UAAU,CAAC,IAAMF,YAAY,CAAC,KAAK,CAAC,CAAE,GAAG,CAAC,CACxD,MAAO,IAAMG,YAAY,CAACF,KAAK,CAAC,CAClC,CACF,CAAC,CAAE,CAACL,IAAI,CAAC,CAAC,CAAE;AAEZ;AAEE;AACF,mBACEL,IAAA,QAAKa,SAAS,mBAAAC,MAAA,CAAoBT,IAAI,CAAG,SAAS,CAAG,UAAU,CAAG,CAAAE,QAAA,cAChEL,KAAA,QAAKW,SAAS,kBAAAC,MAAA,CAAmBT,IAAI,CAAG,SAAS,CAAG,UAAU,CAAG,CAAAE,QAAA,eAC/DP,IAAA,WAAQe,OAAO,CAAET,OAAQ,CAACO,SAAS,CAAC,oBAAoB,CAAAN,QAAA,CAAC,MAEzD,CAAQ,CAAC,CACRA,QAAQ,EACN,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}