{"ast":null,"code":"// Parks List component that displays a list of parks and allows the user to select a park and add a visit to that park.\n// This component is used in the AddVisitModal component and is similar to AttractionsList component.\nimport React,{useState}from\"react\";import{useAuth0}from\"@auth0/auth0-react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ParksList=_ref=>{let{parks,onAdd}=_ref;const[date,setDate]=useState(\"\");const[selectedPark,setSelectedPark]=useState(null);const[selectedParkName,setSelectedParkName]=useState(\"\");const{user}=useAuth0();// The handleAddVisit function is used to add a visit to the selected park.\nconst handleAddVisit=async e=>{e.preventDefault();const userId=user.sub.split(\"|\")[1];// console.log(\"User ID: \", userId);\nconst newVisit={park:{id:selectedPark},parkName:selectedParkName,dateVisited:date,user:{id:userId,name:user.name,email:user.email},userAttractions:[]};onAdd(newVisit);};// The handleParkSelect function is used to select a park from the list of parks.\n// This is preparation for adding a visit to the selected park.\nconst handleParkSelect=park=>{setSelectedPark(park.id);setSelectedParkName(park.name);};// The return statement below will render the ParksList component.\n// The component will display a list of selectable parks ( in alpabetical order ) that a user can add to their visit.\nconst sortedParks=[...parks].map(park=>({...park,parks:park.parks.sort((a,b)=>a.name.localeCompare(b.name))})).sort((a,b)=>a.name.localeCompare(b.name));// The return statement below will render the ParksList component.\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Add a New Visit\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddVisit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Date:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"date\",value:date,onChange:e=>setDate(e.target.value),required:true})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Park:\",/*#__PURE__*/_jsx(\"ul\",{className:\"park-list\",children:sortedParks.map(park=>/*#__PURE__*/_jsx(\"li\",{className:\"park-item \".concat(selectedPark===park.id?\"selected\":\"\"),onClick:()=>handleParkSelect(park),children:/*#__PURE__*/_jsxs(\"div\",{className:\"park-item-content\",children:[/*#__PURE__*/_jsx(\"strong\",{children:park.name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"park-item-subtext\",children:park.parks.map(individualPark=>individualPark.name).join(\", \")})]})},park.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"buttons-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button\",type:\"submit\",disabled:!selectedPark,children:\"Add Visit\"})})]})]});};export default ParksList;","map":{"version":3,"names":["React","useState","useAuth0","jsx","_jsx","jsxs","_jsxs","ParksList","_ref","parks","onAdd","date","setDate","selectedPark","setSelectedPark","selectedParkName","setSelectedParkName","user","handleAddVisit","e","preventDefault","userId","sub","split","newVisit","park","id","parkName","dateVisited","name","email","userAttractions","handleParkSelect","sortedParks","map","sort","a","b","localeCompare","children","onSubmit","type","value","onChange","target","required","className","concat","onClick","individualPark","join","disabled"],"sources":["C:/Users/Brian/Documents/GitHub/Theme-Park-LT/tp/newfe/src/components/Lists/ParksList.js"],"sourcesContent":["// Parks List component that displays a list of parks and allows the user to select a park and add a visit to that park.\r\n// This component is used in the AddVisitModal component and is similar to AttractionsList component.\r\nimport React, { useState } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst ParksList = ({ parks, onAdd }) => {\r\n  const [date, setDate] = useState(\"\");\r\n  const [selectedPark, setSelectedPark] = useState(null);\r\n  const [selectedParkName, setSelectedParkName] = useState(\"\");\r\n  const { user } = useAuth0();\r\n\r\n  // The handleAddVisit function is used to add a visit to the selected park.\r\n  const handleAddVisit = async (e) => {\r\n    e.preventDefault();\r\n    const userId = user.sub.split(\"|\")[1];\r\n    // console.log(\"User ID: \", userId);\r\n\r\n    const newVisit = {\r\n      park: {\r\n        id: selectedPark,\r\n      },\r\n      parkName: selectedParkName,\r\n      dateVisited: date,\r\n      user: {\r\n        id: userId,\r\n        name: user.name,\r\n        email: user.email,\r\n      },\r\n      userAttractions: [],\r\n    };\r\n\r\n    onAdd(newVisit);\r\n  };\r\n\r\n  // The handleParkSelect function is used to select a park from the list of parks.\r\n  // This is preparation for adding a visit to the selected park.\r\n  const handleParkSelect = (park) => {\r\n    setSelectedPark(park.id);\r\n    setSelectedParkName(park.name);\r\n  };\r\n\r\n  // The return statement below will render the ParksList component.\r\n  // The component will display a list of selectable parks ( in alpabetical order ) that a user can add to their visit.\r\n  const sortedParks = [...parks]\r\n    .map((park) => ({\r\n      ...park,\r\n      parks: park.parks.sort((a, b) => a.name.localeCompare(b.name)),\r\n    }))\r\n    .sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  // The return statement below will render the ParksList component.\r\n  return (\r\n    <div>\r\n      <h1>Add a New Visit</h1>\r\n      <form onSubmit={handleAddVisit}>\r\n        <div>\r\n          <label>\r\n            Date:\r\n            <input\r\n              type=\"date\"\r\n              id=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          \r\n            Park:\r\n            <ul className=\"park-list\">\r\n              {sortedParks.map((park) => (\r\n                <li\r\n                  key={park.id}\r\n                  className={`park-item ${\r\n                    selectedPark === park.id ? \"selected\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleParkSelect(park)}\r\n                >\r\n                  <div className=\"park-item-content\">\r\n                    <strong>{park.name}</strong>\r\n                    <br />\r\n                    <div className=\"park-item-subtext\">\r\n                      {park.parks\r\n                        .map((individualPark) => individualPark.name)\r\n                        .join(\", \")}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          \r\n        </div>\r\n        <div className=\"buttons-container\">\r\n        <button className=\"button\" type=\"submit\" disabled={!selectedPark}>\r\n          Add Visit\r\n        </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParksList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}