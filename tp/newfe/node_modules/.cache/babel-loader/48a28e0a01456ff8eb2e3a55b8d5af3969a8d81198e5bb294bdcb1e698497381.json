{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Documents\\\\GitHub\\\\Theme-Park-LT\\\\tp\\\\newfe\\\\src\\\\components\\\\Modals\\\\InfoModal.js\",\n  _s = $RefreshSig$();\n// The modal component is used as a general modal but in this case, it is used to display the modal for the attractionsList component.\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../../Styles/Modal.css\";\n\n// The modal function takes in the show, onClose, and children props.\n// The show prop is used to determine if the modal should be displayed or not.\n// The onClose prop is used to close the modal.\n// The children prop is used to render the children of the modal.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoModal = ({\n  show,\n  onClose\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n\n  // The useEffect hook is used to set the visibility of the modal.\n  useEffect(() => {\n    if (show) {\n      setIsVisible(true);\n    } else {\n      const timer = setTimeout(() => setIsVisible(false), 200);\n      return () => clearTimeout(timer);\n    }\n  }, [show]); // useEffect hook is dependent on the show variable.\n\n  // console.log(\"isVisible: \", isVisible);\n\n  // The return statement below will render the Modal component.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal-backdrop ${show ? \"fade-in\" : \"fade-out\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-content ${show ? \"fade-in\" : \"fade-out\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"modal-close-button\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Your Visit Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Track All the Attractions You Experience During Your Visit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use the \\\"Add Attraction\\\" button to select rides from a list with live wait times. You can also specify whether you are using the single rider line or a fastpass.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start the timer to track your wait time in line. When you reach the end of the line, stop the timer and submit your time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"After submitting, you can review your ride times and see how long you waited for each attraction.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Important Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Remember to stop the timer when you reach the end of the line.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Submit your time before starting the next ride.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"'\\uD83D\\uDEA7' - Use this button to track how long a ride is broken down if you decide to wait through it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"'\\uD83D\\uDD28' - Indicates that the ride broke down while you were in pne.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"'\\uD83D\\uDE4B' - Indicates that you used the single rider pne.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"'\\u26A1' - Indicates that you used a fastpass.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enjoy your visit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoModal, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n_c = InfoModal;\nexport default InfoModal;\nvar _c;\n$RefreshReg$(_c, \"InfoModal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","InfoModal","show","onClose","_s","isVisible","setIsVisible","timer","setTimeout","clearTimeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Brian/Documents/GitHub/Theme-Park-LT/tp/newfe/src/components/Modals/InfoModal.js"],"sourcesContent":["// The modal component is used as a general modal but in this case, it is used to display the modal for the attractionsList component.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../../Styles/Modal.css\";\r\n\r\n// The modal function takes in the show, onClose, and children props.\r\n// The show prop is used to determine if the modal should be displayed or not.\r\n// The onClose prop is used to close the modal.\r\n// The children prop is used to render the children of the modal.\r\nconst InfoModal = ({ show, onClose }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  // The useEffect hook is used to set the visibility of the modal.\r\n  useEffect(() => {\r\n    if (show) {\r\n      setIsVisible(true);\r\n    } else {\r\n      const timer = setTimeout(() => setIsVisible(false), 200);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [show]); // useEffect hook is dependent on the show variable.\r\n\r\n  // console.log(\"isVisible: \", isVisible);\r\n\r\n  // The return statement below will render the Modal component.\r\n  return (\r\n    <div className={`modal-backdrop ${show ? \"fade-in\" : \"fade-out\"}`}>\r\n      <div className={`modal-content ${show ? \"fade-in\" : \"fade-out\"}`}>\r\n        <button onClick={onClose} className=\"modal-close-button\">\r\n          &times;\r\n        </button>\r\n        <h1>Welcome to Your Visit Page!</h1>\r\n        <h3>Track All the Attractions You Experience During Your Visit</h3>\r\n        <p>\r\n          Use the \"Add Attraction\" button to select rides from a list with live\r\n          wait times. You can also specify whether you are using the single\r\n          rider line or a fastpass.\r\n        </p>\r\n        <p>\r\n          Start the timer to track your wait time in line. When you reach the\r\n          end of the line, stop the timer and submit your time.\r\n        </p>\r\n        <p>\r\n          After submitting, you can review your ride times and see how long you\r\n          waited for each attraction.\r\n        </p>\r\n\r\n        <h3>Important Notes</h3>\r\n\r\n          <p>\r\n            Remember to stop the timer when you reach the end of the line.\r\n          </p>\r\n          <p>Submit your time before starting the next ride.</p>\r\n          <p>\r\n            'ðŸš§' - Use this button to track how long a ride is broken down if\r\n            you decide to wait through it.\r\n          </p>\r\n          <p>\r\n            'ðŸ”¨' - Indicates that the ride broke down while you were in pne.\r\n          </p>\r\n          <p>'ðŸ™‹' - Indicates that you used the single rider pne.</p>\r\n          <p>'âš¡' - Indicates that you used a fastpass.</p>\r\n\r\n\r\n        <h3>Enjoy your visit!</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}