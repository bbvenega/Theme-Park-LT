{"ast":null,"code":"// FormatTime function to convert date to Month, Day, Year\n\nexport const FormatDate = dateString => {\n  dateString += \"T00:00:00\";\n  const date = new Date(dateString);\n  const localDate = new Date(date.getTime() + date.getTimezoneOffset() * 60000);\n  const year = localDate.getFullYear();\n  const month = localDate.getMonth();\n  const day = localDate.getDate();\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  // Converts the passed in day into the correct suffix\n  const getDaySuffix = day => {\n    if (day > 3 && day < 21) return 'th';\n    switch (day % 10) {\n      case 1:\n        return \"st\";\n      case 2:\n        return \"nd\";\n      case 3:\n        return \"rd\";\n      default:\n        return 'th';\n    }\n  };\n  const monthName = monthNames[month];\n  const daySuffix = getDaySuffix(day);\n  // console.log(\"Day: \", day);\n  return `${monthName} ${day}${daySuffix}, ${year}`;\n};\n_c = FormatDate;\nvar _c;\n$RefreshReg$(_c, \"FormatDate\");","map":{"version":3,"names":["FormatDate","dateString","date","Date","localDate","getTime","getTimezoneOffset","year","getFullYear","month","getMonth","day","getDate","monthNames","getDaySuffix","monthName","daySuffix","_c","$RefreshReg$"],"sources":["C:/Users/Brian/Documents/GitHub/Theme-Park-LT/tp/newfe/src/services/Time Stuff/FormatDate.js"],"sourcesContent":["// FormatTime function to convert date to Month, Day, Year\r\n\r\nexport const FormatDate = (dateString) => {\r\n    dateString += \"T00:00:00\";\r\n    const date = new Date(dateString);\r\n    const localDate = new Date(date.getTime() + date.getTimezoneOffset() * 60000);\r\n    const year = localDate.getFullYear();\r\n    const month = localDate.getMonth();\r\n    const day = localDate.getDate();\r\n\r\n    const monthNames = [\r\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n      ];\r\n\r\n      // Converts the passed in day into the correct suffix\r\n      const getDaySuffix = (day) => {\r\n        if (day > 3 && day < 21) return 'th';\r\n        switch (day % 10) {\r\n            case 1: return \"st\";\r\n            case 2: return \"nd\";\r\n            case 3: return \"rd\";\r\n            default: return 'th';\r\n        }\r\n      };\r\n\r\n      const monthName = monthNames[month];\r\n      const daySuffix = getDaySuffix(day);\r\n      // console.log(\"Day: \", day);\r\n      return `${monthName} ${day}${daySuffix}, ${year}`;\r\n\r\n  };\r\n\r\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,UAAU,GAAIC,UAAU,IAAK;EACtCA,UAAU,IAAI,WAAW;EACzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,MAAMG,SAAS,GAAG,IAAID,IAAI,CAACD,IAAI,CAACG,OAAO,CAAC,CAAC,GAAGH,IAAI,CAACI,iBAAiB,CAAC,CAAC,GAAG,KAAK,CAAC;EAC7E,MAAMC,IAAI,GAAGH,SAAS,CAACI,WAAW,CAAC,CAAC;EACpC,MAAMC,KAAK,GAAGL,SAAS,CAACM,QAAQ,CAAC,CAAC;EAClC,MAAMC,GAAG,GAAGP,SAAS,CAACQ,OAAO,CAAC,CAAC;EAE/B,MAAMC,UAAU,GAAG,CACf,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;;EAED;EACA,MAAMC,YAAY,GAAIH,GAAG,IAAK;IAC5B,IAAIA,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAG,EAAE,EAAE,OAAO,IAAI;IACpC,QAAQA,GAAG,GAAG,EAAE;MACZ,KAAK,CAAC;QAAE,OAAO,IAAI;MACnB,KAAK,CAAC;QAAE,OAAO,IAAI;MACnB,KAAK,CAAC;QAAE,OAAO,IAAI;MACnB;QAAS,OAAO,IAAI;IACxB;EACF,CAAC;EAED,MAAMI,SAAS,GAAGF,UAAU,CAACJ,KAAK,CAAC;EACnC,MAAMO,SAAS,GAAGF,YAAY,CAACH,GAAG,CAAC;EACnC;EACA,OAAO,GAAGI,SAAS,IAAIJ,GAAG,GAAGK,SAAS,KAAKT,IAAI,EAAE;AAErD,CAAC;AAACU,EAAA,GA7BSjB,UAAU;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}