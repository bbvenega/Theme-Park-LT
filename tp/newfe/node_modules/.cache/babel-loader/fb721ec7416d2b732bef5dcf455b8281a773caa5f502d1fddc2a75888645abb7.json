{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Documents\\\\GitHub\\\\Theme-Park-LT\\\\tp\\\\newfe\\\\src\\\\components\\\\Modals\\\\BreakdownTimerModal.js\",\n  _s = $RefreshSig$();\n// The addVisitModal component is used to display a stopwatch to track how long a ride is broken. The component is displayed on the Visit Page.\n// BreakdownTimerModal.js\n\nimport React, { useEffect } from \"react\";\nimport \"../../Styles/Modal.css\";\nimport { formatTime } from \"../../services/Time Stuff/formatTime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BreakdownTimerModal = ({\n  show,\n  onClose,\n  breakdownTime,\n  setBreakdownTime\n}) => {\n  _s();\n  useEffect(() => {\n    let timer;\n    if (show) {\n      timer = setInterval(() => {\n        setBreakdownTime(prevTime => prevTime + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [show, setBreakdownTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal-backdrop ${show ? \"fade-in\" : \"fade-out\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-content ${show ? \"fade-in\" : \"fade-out\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDEA7 Breakdown Timer \\uD83D\\uDEA7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Breakdown Time \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 27\n        }, this), formatTime(breakdownTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"modal-close-button\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(BreakdownTimerModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = BreakdownTimerModal;\nexport default BreakdownTimerModal;\nvar _c;\n$RefreshReg$(_c, \"BreakdownTimerModal\");","map":{"version":3,"names":["React","useEffect","formatTime","jsxDEV","_jsxDEV","BreakdownTimerModal","show","onClose","breakdownTime","setBreakdownTime","_s","timer","setInterval","prevTime","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Brian/Documents/GitHub/Theme-Park-LT/tp/newfe/src/components/Modals/BreakdownTimerModal.js"],"sourcesContent":["// The addVisitModal component is used to display a stopwatch to track how long a ride is broken. The component is displayed on the Visit Page.\r\n// BreakdownTimerModal.js\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport \"../../Styles/Modal.css\";\r\nimport { formatTime } from \"../../services/Time Stuff/formatTime\";\r\n\r\n\r\nconst BreakdownTimerModal = ({ show, onClose, breakdownTime, setBreakdownTime }) => {\r\n  useEffect(() => {\r\n    let timer;\r\n    if (show) {\r\n      timer = setInterval(() => {\r\n        setBreakdownTime((prevTime) => prevTime + 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [show, setBreakdownTime]);\r\n\r\n  return (\r\n    <div className={`modal-backdrop ${show ? \"fade-in\" : \"fade-out\"}`}>\r\n      <div className={`modal-content ${show ? \"fade-in\" : \"fade-out\"}`}>\r\n        <h3>ðŸš§ Breakdown Timer ðŸš§</h3>\r\n        <p>Breakdown Time <br></br>{formatTime(breakdownTime)}</p>\r\n        <button onClick={onClose} className=\"modal-close-button\">\r\n          &times;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BreakdownTimerModal;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,wBAAwB;AAC/B,SAASC,UAAU,QAAQ,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlE,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,aAAa;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAClFT,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK;IACT,IAAIL,IAAI,EAAE;MACRK,KAAK,GAAGC,WAAW,CAAC,MAAM;QACxBH,gBAAgB,CAAEI,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MAC9C,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,CAACL,IAAI,EAAEG,gBAAgB,CAAC,CAAC;EAE5B,oBACEL,OAAA;IAAKW,SAAS,EAAE,kBAAkBT,IAAI,GAAG,SAAS,GAAG,UAAU,EAAG;IAAAU,QAAA,eAChEZ,OAAA;MAAKW,SAAS,EAAE,iBAAiBT,IAAI,GAAG,SAAS,GAAG,UAAU,EAAG;MAAAU,QAAA,gBAC/DZ,OAAA;QAAAY,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BhB,OAAA;QAAAY,QAAA,GAAG,iBAAe,eAAAZ,OAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAAClB,UAAU,CAACM,aAAa,CAAC;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1DhB,OAAA;QAAQiB,OAAO,EAAEd,OAAQ;QAACQ,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CAtBIL,mBAAmB;AAAAiB,EAAA,GAAnBjB,mBAAmB;AAwBzB,eAAeA,mBAAmB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}