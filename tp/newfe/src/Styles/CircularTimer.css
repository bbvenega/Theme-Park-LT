/* CircurlarTimer.css */
/* This style page holds everything timer related. */

/* The timer container is the container that holds the stopwatch. */
.stopwatch-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 20px;
  font-family: poppins;
}

/* The timer container is the container that holds the stopwatch. */
.timer-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
  margin: 0 auto; /* Center horizontally */
  height: 250px;
  width: 250px;
}

/* Specific to the circular timer: */
.circular-timer {
  transform: rotate(-90deg);
}

/* The background of the timer. */
.timer-background {
  fill: none;
  /* background-image: linear-gradient(45deg, #0f3657 0%,#155f83 51%,#042a4b 100% );
   */
  stroke: #0f3657;
}

/* The progress of the timer. */
.timer-progress {
  fill: none;
  stroke-linecap: round;
  transition: stroke-dashoffset 0.5s, stroke 0.5s;
}

/* The loading animation for the timer. */
.timer-progress.loading {
  animation: snakeAnimation 2s linear forwards;
}

/* The text of the timer. */
.timer-text {
  position: absolute;
  font-size: 58px;
  text-align: center;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* The loadup animation for the timer when a user first selects an attraction. */
@keyframes snakeAnimation {
  0% {
    stroke-dashoffset: 0;
  }
  100% {
    stroke-dashoffset: 750; /* Full circumference for the loading effect */
  }
}
